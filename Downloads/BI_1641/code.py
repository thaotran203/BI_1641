# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1ZunuMjnvHIobfBxry-PlBg-PQodWJoCb
"""

# Commented out IPython magic to ensure Python compatibility.
# importing libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.style as style
style.available
import seaborn as sns
# %matplotlib inline
import folium
from sklearn.linear_model import LinearRegression, BayesianRidge
from sklearn.model_selection import RandomizedSearchCV, train_test_split
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error, mean_absolute_error

# interactive visualization
import plotly.express as px
import plotly.graph_objs as go
# import plotly.figure_factory as ff
from plotly.subplots import make_subplots

import json
from google.colab import files
uploaded = files.upload()

# Đặt số lượng dòng hiển thị là 50
pd.options.display.max_rows = 50

# Đường dẫn tới tệp 'top50.csv' trên Google Colab
file_path = '/content/corona_global_latest_04-29-2020_11_38.csv'

# Đọc tệp 'top50.csv' vào DataFrame
df = pd.read_csv(file_path, encoding='ISO-8859-1')


## Cleansing dataset:
df.rename(columns={"Country,Other": "Country",
    "TotalCases": "Total Cases",
    "NewCases": "New Cases",
    "TotalDeaths": "Total Deaths",
    "NewDeaths": "New Deaths",
    "TotalRecovered": "Total Recovered",
    "ActiveCases": "Active Cases",
    "Serious,Critical": "Serious Critical",
    "TotÂ Cases/1M pop": "Cases per 1M pop",
    "Deaths/1M pop": "Deaths per 1M pop",
    "TotalTests": "Total Tests",
    "Tests/ 1M pop": "Tests per 1M pop"}, inplace=True)
# # # Hiển thị DataFrame thành bảng
# display(df)

# # Hiển thị của DataFrame
# print(df.head())

# # # # Hiển thị thông tin của DataFrame
# # print(df.info())
# print(df.tail())

# # # Kiểm tra các biển trong tập dữ liệu
# print(df.describe())

# df.mean()

# df.max()

# df.min()

# # Sử dụng "joinplot" chứ không phải "joinplot"
# j = sns.jointplot(data=df, height=4)

# # Hiển thị biểu đồ
# plt.show()

# df_line = df[['Total Cases', 'Total Deaths', 'New Deaths']]  # Sửa tên cột dựa trên mã làm sạch dữ liệu của bạn

# sns.pairplot(df_line)
# plt.show()


# # Tạo danh sách màu sắc cho các cột
# colors = ['red', 'green', 'blue', 'yellow', 'black', 'cyan', 'brown', 'orange', 'gray', 'purple', 'pink']

# # Lấy 10 quốc gia có số ca COVID-19 cao nhất
# top_10_countries = df.nlargest(10, 'Total Cases')

# # Sắp xếp lại danh sách để đảm bảo nó được sắp xếp giảm dần
# top_10_countries = top_10_countries.sort_values(by='Total Cases', ascending=False)

# # Tạo biểu đồ cột
# fig, ax = plt.subplots(figsize=(10, 6))  # Kích thước biểu đồ

# # Vẽ biểu đồ cột
# ax.bar(top_10_countries['Country'], top_10_countries['Total Cases'], color=colors)

# # Tiêu đề và nhãn
# plt.title('Top 10 Highest Total Cases Country')
# plt.xticks(rotation=45, horizontalalignment='right')
# plt.xlabel('Country', fontweight='bold')
# plt.ylabel('Total Cases', fontweight='bold')

# # Hiển thị biểu đồ
# plt.show()

# Tạo danh sách màu sắc cho các cột
colors = ['red', 'green', 'blue', 'yellow', 'black', 'cyan', 'brown', 'orange', 'gray', 'purple', 'pink']

# Lấy 10 quốc gia có số ca tử vong COVID-19 cao nhất
top_10_countries = df.nlargest(10, 'Total Deaths')

# Sắp xếp lại danh sách để đảm bảo nó được sắp xếp giảm dần
top_10_countries = top_10_countries.sort_values(by='Total Deaths', ascending=False)

# Tạo biểu đồ cột
fig, ax = plt.subplots(figsize=(10, 6))  # Kích thước biểu đồ

# Vẽ biểu đồ cột
ax.bar(top_10_countries['Country'], top_10_countries['Total Deaths'], color=colors)

# Tiêu đề và nhãn
plt.title('Top 10 Highest Total Deaths Country')
plt.xticks(rotation=45, horizontalalignment='right')
plt.xlabel('Country', fontweight='bold')
plt.ylabel('TotalDeaths', fontweight='bold')

# Hiển thị biểu đồ
plt.show()